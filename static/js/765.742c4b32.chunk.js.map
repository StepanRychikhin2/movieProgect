{"version":3,"file":"static/js/765.742c4b32.chunk.js","mappings":"uLAKA,MAAMA,EAAU,CACfC,OAAQ,MACRC,QAAS,CACRC,OAAQ,mBACRC,cACC,2PAGGC,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wMAiElC,EAtDmBC,KAClB,IAAIC,GAASC,EAAAA,EAAAA,KACbC,QAAQC,IAAIH,EAAOI,IACnB,MAAOC,EAAiBC,IAAsBC,EAAAA,EAAAA,UAAS,KAChDC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAS,GAa3C,OAZAG,EAAAA,EAAAA,YAAU,KACS,IAAdF,IACHC,EAAa,IACbE,MACC,+DACAtB,GAECuB,MAAMC,GAASA,EAAKC,SACpBF,MAAMC,GAASP,EAAmBO,KACrC,KAIAE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACCC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,EAAIC,gBAAgBJ,SAAC,oBACpCF,EAAAA,EAAAA,MAAA,MAAII,UAAWC,EAAAA,EAAIE,eAAeL,SAAA,CAChCf,QAAQC,IAAIE,EAAgBkB,SAC5BlB,GAAmBA,EAAgBkB,QACnClB,EAAgBkB,QAAQC,KAAKX,IAE3BK,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,EAAIK,cAAcR,UAEhCF,EAAAA,EAAAA,MAACrB,EAAU,CACVyB,UAAWC,EAAAA,EAAIM,WACfC,GAAE,aAAAC,OAAef,EAAKT,IAAKa,SAAA,EAE3BC,EAAAA,EAAAA,KAAA,OACAC,UAAWC,EAAAA,EAAIS,YACfC,IAAG,mCAAAF,OAAqCf,EAAKkB,gBAE7Cb,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAAA,EAAIY,gBAAgBf,SAChCJ,EAAKoB,MAAQpB,EAAKoB,MAAQpB,EAAKqB,WAXIrB,EAAKT,OAoB9Cc,EAAAA,EAAAA,KAAA,KAAAD,SAAG,mBAILC,EAAAA,EAAAA,KAACiB,EAAAA,GAAM,MACL,C","sources":["components/pages/TrendTodey/TrendTodey.jsx"],"sourcesContent":["import { Outlet, Link, NavLink } from 'react-router-dom'\r\nimport { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport styled from 'styled-components'\r\nimport sty from '../../allStyle.module.css'\r\nconst options = {\r\n\tmethod: 'GET',\r\n\theaders: {\r\n\t\taccept: 'application/json',\r\n\t\tAuthorization:\r\n\t\t\t'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlM2U5NjUzOTA2YmViMWZkYjJlZmMxNWQ4NGZkYjVkMCIsIm5iZiI6MTczNDA5NzAyNS45NjgsInN1YiI6IjY3NWMzODgxNGI1MjgwZmYwYzFjMDJkMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.U5yk5euBreAV-lTz-TDxrJpfqnF0YeufaoMJaGHCx-Q',\r\n\t},\r\n}\r\nconst StyledLink = styled(NavLink)`\r\n\tcolor: #0073ff;\r\n\tfont-family: \"Roboto Mono\", serif;\r\n  font-optical-sizing: auto;\r\n  font-weight: 500;\r\n  font-style: normal;\r\n  font-size:20px;\r\n\t&.active {\r\n\t\tcolor: #005ed8;\r\n\t}\r\n`\r\nconst TrendTodey = () => {\r\n\tlet params = useParams()\r\n\tconsole.log(params.id)\r\n\tconst [movieTrendTodey, setMovieTrendTodey] = useState([])\r\n\tconst [forstLoad, setForstLoad] = useState(1)\r\n\tuseEffect(() => {\r\n\t\tif (forstLoad === 1) {\r\n\t\t\tsetForstLoad(10)\r\n\t\t\tfetch(\r\n\t\t\t\t'https://api.themoviedb.org/3/trending/all/day?language=en-US',\r\n\t\t\t\toptions\r\n\t\t\t)\r\n\t\t\t\t.then((data) => data.json())\r\n\t\t\t\t.then((data) => setMovieTrendTodey(data))\r\n\t\t}\r\n\t})\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1 className={sty.titleTrendTodey}>Trending Today</h1>\r\n\t\t\t<ul className={sty.listTrendTodey}>\r\n\t\t\t\t{console.log(movieTrendTodey.results)}\r\n\t\t\t\t{movieTrendTodey && movieTrendTodey.results ? (\r\n\t\t\t\t\tmovieTrendTodey.results.map((data) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<li className={sty.cardTrenTodey} key={data.id}>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<StyledLink\r\n\t\t\t\t\t\t\t\t\tclassName={sty.linkToload}\r\n\t\t\t\t\t\t\t\t\tto={`/Loadpage/${data.id}`}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tclassName={sty.photoPoster}\r\n\t\t\t\t\t\t\t\t\tsrc={`https://image.tmdb.org/t/p/w500/${data.poster_path}`}\r\n\t\t\t\t\t\t\t\t></img>\r\n\t\t\t\t\t\t\t\t\t<p className={sty.textPosterTrend}>\r\n\t\t\t\t\t\t\t\t\t\t{data.title ? data.title : data.name}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</StyledLink>\r\n\t\t\t\t\t\t\t\t{/* {params.data.id} */}\r\n\t\t\t\t\t\t\t\t{/* {console.log(params)} */}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<p>loading...</p>\r\n\t\t\t\t)}\r\n\t\t\t</ul>\r\n\r\n\t\t\t<Outlet />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default TrendTodey\r\n"],"names":["options","method","headers","accept","Authorization","StyledLink","styled","NavLink","_templateObject","_taggedTemplateLiteral","TrendTodey","params","useParams","console","log","id","movieTrendTodey","setMovieTrendTodey","useState","forstLoad","setForstLoad","useEffect","fetch","then","data","json","_jsxs","_Fragment","children","_jsx","className","sty","titleTrendTodey","listTrendTodey","results","map","cardTrenTodey","linkToload","to","concat","photoPoster","src","poster_path","textPosterTrend","title","name","Outlet"],"sourceRoot":""}